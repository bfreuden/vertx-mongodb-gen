
InsertOneResult has an insertedId with an Object type?
FindOption setSort -> sort
Promise.promise() vs vertx.promise()?
handler async result functions fluent or void?
create an ObjectID class?
don't ignore <TResult> Class<TResult> methods?
  maybe create a VersatileMongoCollection interface with them?
force batch size to 1 in mongoresult when not provided?
  because the mongo driver will probably choose a good batch size anyway and actually batch them in the publisher?

TODO:
rename package from io.vertx.mongo to io.vertx.ext.mongo
split the project in 2: generation + client
automate (maven) the download of mongo sources to run the doclet
add mongodriverinformation when creating mongoclient
missing data of gridfs upload publisher : getId() & getObjectId()
add convenience methods:
 - dropdatabase(name)
 - dropcollection(name)
 - createAndGetCollection
 - save (= replace + no need to provide the id)
 - get gridfs bucket from database
