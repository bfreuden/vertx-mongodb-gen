
InsertOneResult has an insertedId with an Object type?
FindOption setSort -> sort
    => setSort because vertx codegen won't work with sort
Promise.promise() vs vertx.promise()?
handler async result functions fluent or void?
create an ObjectID class?
don't ignore <TResult> Class<TResult> methods?
  maybe create a VersatileMongoCollection interface with them?
force batch size to 1 in mongoresult when not provided?
  because the mongo driver will probably choose a good batch size anyway and actually batch them in the publisher?
really support objectid=false?
gridfs updloadFile methods don't allow to set a "target" filename?
squash some package names like model?

FIXME:
implement Serializer classes
implement all ConversionUtilsImpl methods
handle mapping of oid in InsertResult etc...
handle mapping of oid in ChangeStreamDocument


TODO:
rename gridfs hardocded function names caused by missing objectid class that exists now
EncryptOptions not data object
conversion utils contains unused methods
implement Serializer classes
implement all ConversionUtilsImpl methods
possibility to post configure databases, collections, updateoptions, etc...
rename package from io.vertx.mongo to io.vertx.ext.mongo
support a kind of automatic mapping of dates (prevent having to deal with $date objects)
json-based clientsetting
split the project in 2: generation + client
automate (maven) the download of mongo sources to run the doclet
add mongodriverinformation when creating mongoclient
missing data of gridfs upload publisher : getId() & getObjectId()
add convenience methods:
 - dropdatabase(name)
 - dropcollection(name)
 - createAndGetCollection
 - MongoCollection.acknowledged()
 - MongoCollection.unacknowledged()
 - save (= replace + no need to provide the id)
 - get gridfs bucket from database
review unit tests and make a diff
install a replicaset to test watch methods
client encryption should return Buffer instead of Byte
builder method + config for client encryption
add @links to the mongo javadoc for each method

migration:
batch size always hardcoded to 1 when unspecified
update don't return the new doc by default
